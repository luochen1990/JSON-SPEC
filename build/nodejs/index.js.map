{"version":3,"sources":["index.coffee"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"/source/","sourcesContent":["require './prim/object'\nrequire './prim/array'\nrequire './prim/constructor'\n{Bool} = require './prim/bool'\n{Any} = require './prim/any'\n{Int} = require './prim/int'\n{Nat} = require './prim/nat'\n{Enum} = require './prim/enum'\n{Value} = require './prim/value'\n{Optional} = require './prim/optional'\n{Promise} = require './prim/promise'\n{Tree} = require './prim/tree'\n{Map} = require './prim/map'\n{TreeMap} = require './prim/treemap'\n{Fn} = require './prim/fn'\n{NamedType} = require './prim/namedtype'\n{Strict} = require './prim/strict'\n{Loose} = require './prim/loose'\n{Select} = require './prim/select'\n{Choose} = require './prim/choose'\n{OneOf} = require './prim/oneof'\n{match, unmatchMessages, show, sample, samples, showHtml, htmlInline, htmlBlock} = require './typespec'\n{genRenderCode, showPage} = require './render'\n{typeclass, instance} = require './typeclass'\n\nmodule.exports = {\n\tNumber, String,\n\tBool, Any, Int, Nat, Enum, Value,\n\tOptional, Promise, Tree,\n\tMap, TreeMap, Fn,\n\tNamedType, Strict, Loose, Select, Choose, OneOf\n\tmatch, unmatchMessages, show, sample, samples, showHtml, genRenderCode, showPage,\n}\n\nif module.parent is null\n\trequire 'coffee-mate/global'\n\tUserName = Optional String\n\tUserInfo = {\n\t\tname: UserName\n\t\tposition: String\n\t\tage: Number\n\t}\n\tassert -> match(UserName)('luo') is true\n\tassert -> match(UserName)(1) is false\n\tlog -> show UserName\n\t#log -> show UserInfo\n\n\tTableName = NamedType\n\t\tname: 'TableName'\n\t\tspec: String\n\t\tsamples: ['table1', 'table2']\n\tFieldName = NamedType\n\t\tname: 'FieldName'\n\t\tspec: String\n\t\tsamples: ['product_id', 'sale', 'amount']\n\tComparator = Enum ['=', '<', '<=', '>=', '>']\n\n\tWideTable = [{\n\t\ttableName: TableName\n\t\tjoin: {\n\t\t\tleftTableName: TableName\n\t\t\tleft: FieldName\n\t\t\top: Comparator\n\t\t\tright: FieldName\n\t\t}\n\t}]\n\tlog -> unmatchMessages(WideTable) [\n\t\t{\n\t\t\ttableName: 'a'\n\t\t\tjoin: {\n\t\t\t}\n\t\t}\n\t]\n\t#log -> list(10) samples Any\n\t#log -> json list take(20) samples Any\n\t#log -> json sample Any\n\t#log -> sample Function\n\t#log -> json list take(20) samples [Any]\n\t#log -> json list take(20) samples Optional String\n\t#log -> json list take(20) samples Map(TableName, Number)\n\t#log -> json list take(20) samples NamedType spec: Strict {x: Number, y: String}\n\t#log -> json sample Enum ['a', 'b']\n\t#log -> json list take(20) samples [{tableName: TableName, join: {op: Number}}]\n\t#log -> json sample WideTable\n\t#log -> json list(10) samples Select {a: Number, b: String}\n\n"]}