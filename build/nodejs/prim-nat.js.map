{"version":3,"sources":["prim-nat.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,OAAA,CAAQ,oBAAR;;EACC,WAAY,OAAA,CAAQ,aAAR,EAAZ;;EAED,GAAA,GAAS,CAAA,SAAA;AACR,QAAA;IAAA,CAAA,GAAI;AACJ,WAAO,CAAC,CAAC,CAAC,WAAF,GAAgB,CAAjB;EAFC,CAAA,CAAH,CAAA;;EAIN,QAAA,CAAS,UAAT,CAAA,CAAqB,GAArB,CAAyB,CAAC,KAA1B,CACC;IAAA,KAAA,EAAO,SAAA;aAAM,SAAC,CAAD;eACZ,WAAA,IAAO,CAAC,CAAC,WAAF,KAAiB,MAAxB,IAAmC,CAAI,KAAA,CAAM,CAAN,CAAvC,IAAoD,CAAA,IAAK,CAAzD,IAA+D,CAAA,KAAK,QAAA,CAAS,CAAT;MADxD;IAAN,CAAP;IAEA,IAAA,EAAM,SAAA;aACL;IADK,CAFN;IAIA,OAAA,EAAS,SAAA;aACR,MAAA,CAAO,MAAA,CAAO,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAP,CAAP;IADQ,CAJT;GADD;;EAQA,MAAM,CAAC,OAAP,GAAiB;IAAC,KAAA,GAAD;;AAfjB","file":"prim-nat.js","sourceRoot":"/source/","sourcesContent":["require 'coffee-mate/global'\n{instance} = require './typeclass'\n\nNat = do ->\n\tr = `function Nat(){}`\n\treturn (r.constructor = r)\n\ninstance('TypeSpec')(Nat).where\n\tmatch: () -> (v) ->\n\t\tv? and v.constructor is Number and not isNaN(v) and v >= 0 and v == parseInt(v)\n\tshow: () ->\n\t\t\"Nat\"\n\tsamples: () ->\n\t\tconcat repeat [42, 1, 2]\n\nmodule.exports = {Nat}\n"]}