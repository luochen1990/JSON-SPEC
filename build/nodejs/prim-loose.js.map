{"version":3,"sources":["prim-loose.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,OAAA,CAAQ,oBAAR;;EACA,MAAwB,OAAA,CAAQ,aAAR,CAAxB,EAAC,gBAAA,SAAD,EAAY,eAAA;;EACZ,OAAwD,OAAA,CAAQ,YAAR,CAAxD,EAAC,aAAA,KAAD,EAAQ,YAAA,IAAR,EAAc,eAAA,OAAd,EAAuB,cAAA,MAAvB,EAA+B,kBAAA,UAA/B,EAA2C,iBAAA;;EAC1C,eAAgB,OAAA,CAAQ,WAAR,EAAhB;;EAEK;IACQ,eAAC,QAAD;MACZ,MAAA,CAAO,SAAA;eAAG,GAAA,CAAI,SAAC,GAAD;AAAe,cAAA;UAAb,YAAG;iBAAU,SAAA,CAAU,UAAV,CAAqB,CAAC,WAAtB,CAAkC,IAAI,CAAC,WAAvC;QAAf,CAAJ,CAAA,CAAwE,SAAA,CAAU,QAAV,CAAxE;MAAH,CAAP;AACA,aAAO;QACN,WAAA,EAAa,KADP;QAEN,QAAA,EAAU,QAFJ;;IAFK;;;;;;EAOd,QAAA,CAAS,UAAT,CAAA,CAAqB,KAArB,CAA2B,CAAC,KAA5B,CACC;IAAA,KAAA,EAAO,SAAC,QAAD;aAAc,SAAC,CAAD;eACpB,WAAA,IAAO,CAAC,CAAC,WAAF,KAAiB,MAAxB,IAAmC,CAAC,GAAA,CAAI,SAAC,GAAD;AAAe,cAAA;UAAb,YAAG;iBAAU,KAAA,CAAM,IAAN,CAAA,CAAY,CAAE,CAAA,CAAA,CAAd;QAAf,CAAJ,CAAA,CAAqC,SAAA,CAAU,QAAV,CAArC,CAAD;MADf;IAAd,CAAP;IAEA,IAAA,EAAM,SAAC,GAAD;AACL,UAAA;MADO,WAAD,IAAC;aACP,SAAA,GAAY,CAAC,IAAA,CAAK,GAAA,CAAI,SAAC,IAAD;AAAe,YAAA;QAAb,aAAG;eAAa,CAAD,GAAG,IAAH,GAAM,CAAC,IAAA,CAAK,IAAL,CAAD;MAAvB,CAAJ,CAAA,CAAyC,SAAA,CAAU,QAAV,CAAzC,CAAL,CAAD,CAAmE,CAAC,IAApE,CAAyE,IAAzE,CAAZ,GAA6F;IADxF,CAFN;IAIA,OAAA,EAAS,SAAC,GAAD;AACR,UAAA;MADU,WAAD,IAAC;aACV,MAAA,CAAO,IAAA,CAAK,IAAA,CAAK,GAAA,CAAI,SAAC,IAAD;AAAY,YAAA;QAAV,aAAG;eAAO,CAAC,CAAD,EAAI,MAAA,CAAO,CAAP,CAAJ;MAAZ,CAAJ,CAAA,CAA+B,SAAA,CAAU,QAAV,CAA/B,CAAL,CAAL,CAAP;IADQ,CAJT;IAMA,UAAA,EAAY,SAAC,GAAD;AACX,UAAA;MADa,WAAD,IAAC;aACb;IADW,CANZ;IAQA,SAAA,EAAW,SAAC,GAAD;AACV,UAAA;MADY,WAAD,IAAC;aACZ;QAAA,IAAA,EAAM,yCAAN;QACA,IAAA,EAAM,YAAA,CAAa,OAAb,EAAsB,YAAtB,CAAA,CAAoC,QAApC,CADN;QAEA,IAAA,EAAM,mCAFN;;IADU,CARX;GADD;;EAcA,MAAM,CAAC,OAAP,GAAiB;IAAC,OAAA,KAAD;;AA3BjB","file":"prim-loose.js","sourceRoot":"/source/","sourcesContent":["require 'coffee-mate/global'\n{typeclass, instance} = require './typeclass'\n{match, show, samples, sample, htmlInline, htmlBlock} = require './typespec'\n{genBlockBody} = require './helpers'\n\nclass Loose\n\tconstructor: (specdict) ->\n\t\tassert -> all(([k, spec]) -> typeclass('TypeSpec').hasInstance(spec.constructor)) enumerate(specdict)\n\t\treturn {\n\t\t\tconstructor: Loose\n\t\t\tspecdict: specdict\n\t\t}\n\ninstance('TypeSpec')(Loose).where\n\tmatch: (specdict) -> (v) ->\n\t\tv? and v.constructor is Object and (all(([k, spec]) -> match(spec) v[k]) enumerate(specdict))\n\tshow: ({specdict}) ->\n\t\t'Loose {' + (list map(([k, spec]) -> \"#{k}: #{show spec}\") enumerate(specdict)).join(', ') + '}'\n\tsamples: ({specdict}) ->\n\t\trepeat dict list map(([k, v]) -> [k, sample v]) enumerate(specdict)\n\thtmlInline: ({specdict}) ->\n\t\t\"<span class='type-maker unwrapped'>Loose {<span class='folded-detail'>...</span>}</span>\"\n\thtmlBlock: ({specdict}) ->\n\t\thead: \"<span class='type-maker'>Loose {</span>\"\n\t\tbody: genBlockBody('loose', 'field-name') specdict\n\t\ttail: \"<span class='type-maker'>}</span>\"\n\nmodule.exports = {Loose}\n"]}