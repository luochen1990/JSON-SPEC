{"version":3,"sources":["prim/treemap.coffee"],"names":[],"mappings":"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","file":"prim/treemap.js","sourceRoot":"/source/","sourcesContent":["require 'coffee-mate/global'\n{typeclass, instance} = require '../typeclass'\n{match, constraints, show, samples, sample, htmlInline, htmlBlock} = require '../typespec'\n{genBlockBody, isTypeSpec} = require '../helpers'\n\nclass TreeMap\n\tconstructor: (kspec) ->\n\t\tunless isTypeSpec(kspec)\n\t\t\tthrow Error \"Bad TreeMap Type Definition: TypeSpec as kspec Expected\"\n\n\t\treturn (vspec) ->\n\t\t\tunless isTypeSpec(vspec)\n\t\t\t\tthrow Error \"Bad TreeMap Type Definition: TypeSpec as vspec Expected\"\n\n\t\t\tconstructor: TreeMap\n\t\t\tkspec: kspec\n\t\t\tvspec: vspec\n\ninstance('TypeSpec')(TreeMap).where\n\tmatch: (t) -> (v) ->\n\t\t{kspec, vspec} = t\n\t\tmk = match(kspec)\n\t\tmv = match(t)\n\t\tv? and (\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t(tag = Object.keys(v)[0]) is 'node'\n\t\t\t\t) and (\n\t\t\t\t\tall(mk)(ks = Object.keys(v.node)) and all(mv)(map(seek v.node) ks)\n\t\t\t\t)\n\t\t\t) or (\n\t\t\t\ttag is 'leaf' and match(vspec)(v.leaf)\n\t\t\t)\n\t\t)\n\tconstraints: (t) -> (v) -> cons(\n\t\t{\n\t\t\tlabel: -> \"#{show t} Expected, But Got #{v}\"\n\t\t\tflag: -> v? and (ks = Object.keys(v)).length == 1 and (tag = ks[0]) in ['node', 'leaf']\n\t\t}\n\t)(\n\t\tif not v?\n\t\t\t[]\n\t\telse if v.node?\n\t\t\tconcat map(([k, v]) -> [\n\t\t\t\t{\n\t\t\t\t\tlabel: -> \"TreeMap Key Expected\"\n\t\t\t\t\tsub: -> constraints(t.kspec)(k)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tlabel: -> \"#{show t} Expected\"\n\t\t\t\t\tsub: -> constraints(t)(v)\n\t\t\t\t}\n\t\t\t]) enumerate(v.node)\n\t\telse [\n\t\t\t{\n\t\t\t\tlabel: -> \"Leaf Expected to be #{show t.vspec}\"\n\t\t\t\tsub: -> constraints(t.vspec)(v.leaf)\n\t\t\t}\n\t\t]\n\t)\n\tshow: ({kspec, vspec}) ->\n\t\t\"T.TreeMap(#{show kspec})(#{show vspec})\"\n\tsamples: ({kspec, vspec}) ->\n\t\tks = list take(4) samples(kspec)\n\t\tvs = list take(3) samples(vspec)\n\t\tconcat repeat [{node: dict([[ks[0], {node: dict([[ks[2], {leaf: vs[0]}], [ks[3], {leaf: vs[1]}]])}], [ks[1], {leaf: vs[2]}]])}]\n\thtmlInline: ({kspec, vspec}) ->\n\t\t\"<span class='type-maker unwrapped'>TreeMap #{htmlInline kspec} #{htmlInline vspec}</span>\"\n\thtmlBlock: ({kspec, vspec}) ->\n\t\thead: \"<span class='type-maker'>TreeMap (</span>\"\n\t\tbody: genBlockBody('treemap', 'meta-field') {key: kspec, value: vspec}\n\t\ttail: \"<span class='type-maker'>)</span>\"\n\nmodule.exports = {TreeMap}\n"]}