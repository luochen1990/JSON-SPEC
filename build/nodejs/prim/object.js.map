{"version":3,"sources":["prim/object.coffee"],"names":[],"mappings":"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","file":"prim/object.js","sourceRoot":"/source/","sourcesContent":["require 'coffee-mate/global'\n{instance} = require '../typeclass'\n{shape, match, constraints, show, samples, sample, htmlInline, htmlBlock} = require '../typespec'\n{genBlockBody, isTypeSpecDict} = require '../helpers'\n\nspecdictChecked = (f) ->\n\t(specdict) ->\n\t\tunless isTypeSpecDict(specdict)\n\t\t\tthrow Error \"Bad Object Type Definition: Dict Of TypeSpec Expected, But Got #{specdict}\"\n\t\treturn f(specdict)\n\ninstance('TypeSpec')(Object).where\n\tshape: (specdict) -> fromList map(([k, spec]) -> [k, shape(spec)]) enumerate(specdict)\n\tmatch: specdictChecked (specdict) -> (v) ->\n\t\tv? and (all((k) -> specdict[k]?) Object.keys(v)) and all(([k, spec]) -> match(spec) v[k]) enumerate(specdict)\n\tconstraints: (specdict) -> (v) -> cons(\n\t\t{\n\t\t\tlabel: -> \"Object Expected, But Got #{v}\"\n\t\t\tflag: -> v?\n\t\t}\n\t) cons(\n\t\t{\n\t\t\tlabel: -> \"Redundant Keys: #{list filter((k) -> not specdict[k]?) Object.keys(v)}\"\n\t\t\tflag: -> all((k) -> specdict[k]?) Object.keys(v)\n\t\t}\n\t)(\n\t\tmap(([k, spec]) ->\n\t\t\t{\n\t\t\t\tlabel: -> \"Field #{k}\"\n\t\t\t\tsub: -> constraints(spec)(v[k])\n\t\t\t}\n\t\t) enumerate(specdict)\n\t)\n\tshow: specdictChecked (specdict) ->\n\t\t\"{#{(list map(([k, spec]) -> \"#{k}: #{show spec}\") enumerate(specdict)).join(', ')}}\"\n\tsamples: specdictChecked (specdict) ->\n\t\trepeat dict list map(([k, v]) -> [k, sample v]) enumerate(specdict)\n\thtmlInline: specdictChecked (specdict) ->\n\t\t\"<span class='type-maker'>{<span class='folded-detail'>...</span>}</span>\"\n\thtmlBlock: specdictChecked (specdict) ->\n\t\thead: \"<span class='type-maker'>{</span>\"\n\t\tbody: genBlockBody('object', 'field-name') specdict\n\t\ttail: \"<span class='type-maker'>}</span>\"\n\n"]}