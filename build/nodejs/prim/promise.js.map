{"version":3,"sources":["prim/promise.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,OAAA,CAAQ,oBAAR;;EACA,MAAwB,OAAA,CAAQ,cAAR,CAAxB,EAAC,gBAAA,SAAD,EAAY,eAAA;;EACZ,OAAwD,OAAA,CAAQ,aAAR,CAAxD,EAAC,aAAA,KAAD,EAAQ,YAAA,IAAR,EAAc,eAAA,OAAd,EAAuB,cAAA,MAAvB,EAA+B,kBAAA,UAA/B,EAA2C,iBAAA;;EAC3C,OAAgC,OAAA,CAAQ,YAAR,CAAhC,EAAC,uBAAA,eAAD,EAAkB,kBAAA;;EAEZ;IACQ,iBAAC,IAAD;MACZ,IAAA,CAAO,UAAA,CAAW,IAAX,CAAP;AACC,cAAM,KAAA,CAAM,yDAAN,EADP;;AAGA,aAAO;QACN,WAAA,EAAa,OADP;QAEN,IAAA,EAAM,IAFA;;IAJK;;;;;;EASd,QAAA,CAAS,UAAT,CAAA,CAAqB,OAArB,CAA6B,CAAC,KAA9B,CACC;IAAA,KAAA,EAAO,SAAC,GAAD;AAAY,UAAA;MAAV,OAAD,IAAC;aAAU,SAAC,CAAD;eAClB;MADkB;IAAZ,CAAP;IAEA,QAAA,EAAU,SAAC,GAAD;AAAY,UAAA;MAAV,OAAD,IAAC;aAAU,SAAC,CAAD;QACrB,IAAO,qCAAP;AACC,gBAAM,SAAA,CAAU;YAAC,QAAA,EAAU,SAAX;YAAsB,GAAA,EAAK,CAA3B;WAAV,EADP;SAAA,MAAA;AAGC,iBAAO,CAAC,CAAC,IAAF,CAAO,SAAC,CAAD;YACb,QAAA,CAAS,IAAT,CAAA,CAAe,CAAf;AACA,mBAAO;UAFM,CAAP,EAHR;;MADqB;IAAZ,CAFV;IASA,IAAA,EAAM,SAAC,GAAD;AACL,UAAA;MADO,OAAD,IAAC;aACP,UAAA,GAAU,CAAC,IAAA,CAAK,IAAL,CAAD;IADL,CATN;IAWA,OAAA,EAAS,SAAC,GAAD;AACR,UAAA;MADU,OAAD,IAAC;aACV,OAAA,CAAQ,IAAR;IADQ,CAXT;IAaA,UAAA,EAAY,SAAC,GAAD;AACX,UAAA;MADa,OAAD,IAAC;aACb,6CAAA,GAA6C,CAAC,UAAA,CAAW,IAAX,CAAD,CAA7C,GAA8D;IADnD,CAbZ;IAeA,SAAA,EAAW,SAAC,GAAD;AACV,UAAA;MADY,OAAD,IAAC;aACZ,eAAA,CAAgB,SAAC,IAAD;eACf,mCAAA,GAAoC,IAApC,GAAyC;MAD1B,CAAhB,CAAA,CAEE,IAFF;IADU,CAfX;GADD;;EAqBA,MAAM,CAAC,OAAP,GAAiB;IAAC,SAAA,OAAD;;AApCjB","file":"prim/promise.js","sourceRoot":"/source/","sourcesContent":["require 'coffee-mate/global'\n{typeclass, instance} = require '../typeclass'\n{match, show, samples, sample, htmlInline, htmlBlock} = require '../typespec'\n{expandBlockHead, isTypeSpec} = require '../helpers'\n\nclass Promise\n\tconstructor: (spec) ->\n\t\tunless isTypeSpec(spec)\n\t\t\tthrow Error \"Bad Optional Type Definition: TypeSpec as spec Expected\"\n\n\t\treturn {\n\t\t\tconstructor: Promise\n\t\t\tspec: spec\n\t\t}\n\ninstance('TypeSpec')(Promise).where\n\tmatch: ({spec}) -> (v) ->\n\t\tv?.then?\n\twithSpec: ({spec}) -> (v) ->\n\t\tif not v?.then?\n\t\t\tthrow TypeError {expected: 'Promise', got: v}\n\t\telse\n\t\t\treturn v.then (x) ->\n\t\t\t\twithSpec(spec)(x)\n\t\t\t\treturn x\n\tshow: ({spec}) ->\n\t\t\"Promise #{show spec}\"\n\tsamples: ({spec}) ->\n\t\tsamples spec\n\thtmlInline: ({spec}) ->\n\t\t\"<span class='type-maker unwrapped'>Promise #{htmlInline spec}</span>\"\n\thtmlBlock: ({spec}) ->\n\t\texpandBlockHead((head) ->\n\t\t\t\"<span class='type-maker'>Promise #{head}</span>\"\n\t\t) spec\n\nmodule.exports = {Promise}\n"]}