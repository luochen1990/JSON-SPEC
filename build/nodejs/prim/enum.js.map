{"version":3,"sources":["prim/enum.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA,oBAAA;IAAA;;EAAA,OAAA,CAAQ,oBAAR;;EACC,WAAY,OAAA,CAAQ,cAAR,EAAZ;;EACA,OAAQ,OAAA,CAAQ,aAAR,EAAR;;EASK;IACQ,cAAC,EAAD;MACZ,IAAG,CAAI,CAAC,GAAA,CAAI,SAAC,CAAD;eAAO;MAAP,CAAJ,CAAA,CAAe,EAAf,CAAD,CAAP;AACC,cAAM,KAAA,CAAM,uEAAA,GAAwE,EAA9E,EADP;;AAEA,aAAO;QACN,WAAA,EAAa,IADP;QAEN,MAAA,EAAM,EAFA;;IAHK;;;;;;EAQd,QAAA,CAAS,UAAT,CAAA,CAAqB,IAArB,CAA0B,CAAC,KAA3B,CACC;IAAA,KAAA,EAAO,SAAC,GAAD;AAAgB,UAAA;MAAR,KAAP,IAAC;aAAc,SAAC,CAAD;eACtB,aAAK,EAAL,EAAA,CAAA;MADsB;IAAhB,CAAP;IAEA,WAAA,EAAa,SAAC,CAAD;AACZ,UAAA;MAAO,KAAM,EAAZ;aACD,SAAC,CAAD;eAAO;UACN;YACC,KAAA,EAAO,SAAA;qBAAK,CAAC,IAAA,CAAK,CAAL,CAAD,CAAA,GAAQ,qBAAR,GAA4B,CAAC,IAAA,CAAK,CAAL,CAAD;YAAjC,CADR;YAEC,IAAA,EAAM,SAAA;qBAAG,aAAK,EAAL,EAAA,CAAA;YAAH,CAFP;WADM;;MAAP;IAFY,CAFb;IAUA,IAAA,EAAM,SAAC,GAAD;AACL,UAAA;MADa,KAAP,IAAC;aACP,SAAA,GAAS,CAAC,IAAA,CAAK,EAAL,CAAD,CAAT,GAAkB;IADb,CAVN;IAYA,OAAA,EAAS,SAAC,GAAD;AACR,UAAA;MADgB,KAAP,IAAC;aACV,MAAA,CAAO,MAAA,CAAO,EAAP,CAAP;IADQ,CAZT;IAcA,UAAA,EAAY,SAAC,GAAD;AACX,UAAA;MADmB,KAAP,IAAC;aACb,0CAAA,GAA0C,CAAC,IAAA,CAAK,EAAL,CAAD,CAA1C,GAAmD;IADxC,CAdZ;GADD;;EAkBA,MAAM,CAAC,OAAP,GAAiB;IAAC,MAAA,IAAD;;AAtCjB","file":"prim/enum.js","sourceRoot":"/source/","sourcesContent":["require 'coffee-mate/global'\n{instance} = require '../typeclass'\n{show} = require '../typespec'\n\n#`function Enum(ls){\n#\treturn {\n#\t\tconstructor: Enum,\n#\t\tenum: ls\n#\t}\n#}`\n\nclass Enum\n\tconstructor: (ls) ->\n\t\tif not (all((x) -> x?) ls)\n\t\t\tthrow Error \"Bad Enum Type Definition: Array Of Non-Null Values Expected, Bot Got #{ls}\"\n\t\treturn {\n\t\t\tconstructor: Enum\n\t\t\tenum: ls\n\t\t}\n\ninstance('TypeSpec')(Enum).where\n\tmatch: ({enum: vs}) -> (v) ->\n\t\tv in vs\n\tconstraints: (t) ->\n\t\t{enum: vs} = t\n\t\t(v) -> [\n\t\t\t{\n\t\t\t\tlabel: -> \"#{show t} Expected, But Got #{json v}\"\n\t\t\t\tflag: -> v in vs\n\t\t\t}\n\t\t]\n\tshow: ({enum: vs}) ->\n\t\t\"T.Enum(#{json vs})\"\n\tsamples: ({enum: vs}) ->\n\t\tconcat repeat vs\n\thtmlInline: ({enum: vs}) ->\n\t\t\"<span class='type-maker unwrapped'>Enum #{json vs}</span>\"\n\nmodule.exports = {Enum}\n"]}