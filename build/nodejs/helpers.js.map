{"version":3,"sources":["helpers.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,MAA0B,OAAA,CAAQ,YAAR,CAA1B,EAAC,iBAAA,UAAD,EAAa,gBAAA;;EACZ,YAAa,OAAA,CAAQ,aAAR,EAAb;;EAED,eAAA,GAAkB,SAAC,CAAD;WAAO,SAAC,IAAD;AACxB,UAAA;MAAA,KAAA,GAAQ,SAAA,CAAU,IAAV;MACR,IAAO,aAAP;eACC,KADD;OAAA,MAAA;eAGC;UAAA,IAAA,EAAM,CAAA,CAAE,KAAK,CAAC,IAAR,CAAN;UACA,IAAA,EAAM,KAAK,CAAC,IADZ;UAEA,IAAA,EAAM,KAAK,CAAC,IAFZ;UAHD;;IAFwB;EAAP;;EASlB,YAAA,GAAe,SAAC,SAAD,EAAY,QAAZ;WAAyB,SAAC,QAAD;AACvC,UAAA;MAAA,GAAA,GAAM,GAAA,CAAI,SAAC,GAAD;AACT,YAAA;QADW,YAAG;QACd,KAAA,GAAQ,SAAA,CAAU,CAAV;AACR,eAAO,oBAAA,GAEM,CAAI,aAAH,GAAe,MAAf,GAA2B,QAA5B,CAFN,GAE2C,oBAF3C,GAGS,QAHT,GAGkB,IAHlB,GAGsB,CAHtB,GAGwB,WAHxB,GAGkC,CAAC,UAAA,CAAW,CAAX,CAAD,CAHlC,GAGgD,YAHhD,GAKN,CAAI,aAAH,GACD,sCAAA,GAEgB,QAFhB,GAEyB,IAFzB,GAE6B,CAF7B,GAE+B,WAF/B,GAE0C,KAAK,CAAC,IAFhD,GAEqD,KAFrD,GAGE,sCAAc,EAAd,CAHF,GAGmB,KAHnB,GAIE,sCAAc,EAAd,CAJF,GAImB,UALlB,GAQK,EARN,CALM,GAaG;MAfD,CAAJ,CAAA,CAkBJ,SAAA,CAAU,QAAV,CAlBI;AAmBN,aAAO,CAAA,aAAA,GAAc,SAAd,GAAwB,IAAxB,CAAA,GAA8B,CAAC,IAAA,CAAK,GAAL,CAAD,CAAU,CAAC,IAAX,CAAgB,IAAhB,CAA9B,GAAsD;IApBtB;EAAzB;;EAsBf,UAAA,GAAa,SAAC,IAAD;WACZ,cAAA,IAAU,SAAA,CAAU,UAAV,CAAqB,CAAC,WAAtB,CAAkC,IAAI,CAAC,WAAvC;EADE;;EAGb,cAAA,GAAiB,SAAC,QAAD;WAChB,kBAAA,IAAc,GAAA,CAAI,SAAC,GAAD;AAAY,UAAA;MAAV,YAAG;aAAO,UAAA,CAAW,CAAX;IAAZ,CAAJ,CAAA,CAA+B,SAAA,CAAU,QAAV,CAA/B;EADE;;EAGjB,MAAM,CAAC,OAAP,GAAiB;IAAC,iBAAA,eAAD;IAAkB,cAAA,YAAlB;IAAgC,YAAA,UAAhC;IAA4C,gBAAA,cAA5C;;AAxCjB","file":"helpers.js","sourceRoot":"/source/","sourcesContent":["{htmlInline, htmlBlock} = require './typespec'\n{typeclass} = require './typeclass'\n\nexpandBlockHead = (f) -> (spec) ->\n\tblock = htmlBlock spec\n\tif not block?\n\t\tnull\n\telse\n\t\thead: f(block.head)\n\t\tbody: block.body\n\t\ttail: block.tail\n\ngenBlockBody = (bodyClass, keyClass) -> (specdict) ->\n\tlis = map(([k, v]) ->\n\t\tblock = htmlBlock v\n\t\treturn \"\"\"\n\t\t<li>\n\t\t<div class='#{if block? then 'fold' else 'inline'}'>\n\t\t\t<span class='#{keyClass}'>#{k}</span>: #{htmlInline v}\n\t\t</div>\n\t\t#{if block? then (\n\t\t\t\"\"\"\n\t\t\t<div class='unfold'>\n\t\t\t\t<span class='#{keyClass}'>#{k}</span>: #{block.head}\n\t\t\t\t#{block.body ? ''}\n\t\t\t\t#{block.tail ? ''}\n\t\t\t</div>\n\t\t\t\"\"\"\n\t\t) else ''}\n\t\t</li>\n\t\t\"\"\"\n\t) enumerate(specdict)\n\treturn \"<ul class='#{bodyClass}'>\" + (list lis).join('\\n') + \"</ul>\"\n\nisTypeSpec = (spec) ->\n\tspec? and typeclass('TypeSpec').hasInstance(spec.constructor)\n\nisTypeSpecDict = (specdict) ->\n\tspecdict? and all(([k, v]) -> isTypeSpec(v)) enumerate(specdict)\n\nmodule.exports = {expandBlockHead, genBlockBody, isTypeSpec, isTypeSpecDict}\n\n"]}